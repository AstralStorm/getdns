# #-- 125-valgrind-checks.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test

cat >queries <<EOT
NS .
localhost
localhost.
A localhost.
-A getdnsapi.net
qwerlkjhasdfpuiqwyerm.1234kjhrqwersv.com
localhost.
-G TXT bogus.nlnetlabs.nl
-H 8.8.8.8
-H 2a04:b900:0:100::37
-a -A -x www.microsoft.com
-s
-S
-X
EOT
cat >125.supp <<EOT
{
   <bionic_leak_nettle_ecc_point_init>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:__gmp_default_allocate
   fun:_nettle_gmp_alloc_limbs
   fun:nettle_ecc_point_init
   obj:/usr/lib/x86_64-linux-gnu/libunbound.so.2.5.6
}
EOT
(
	if ! valgrind -v --log-file=valgrind.log --suppressions=125.supp --leak-check=full --error-exitcode=1 --track-origins=yes "${GETDNS_QUERY}" -F queries -f "${TPKG_NAME}.ds" +dnssec_return_validation_chain
	then
		exit 1
	fi
) 2>&1 > output
if ! awk '/^==.*(definitely|indirectly|possibly) lost/{print;if($4>0)exit(1)}' valgrind.log
then
	cat valgrind.log
	cat output
	exit 1
fi
if ! awk '/^==.* ERROR SUMMARY/{print;if($4>0)exit(1)}' valgrind.log
then
	cat valgrind.log
	cat output
	exit 1
fi
